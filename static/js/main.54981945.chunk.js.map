{"version":3,"sources":["utils/decoding.ts","DecodedData.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["defaultInterface","Interface","loadSignatures","data","a","length","undefined","signature","slice","axios","get","lookup","results","map","sig","text_signature","decodeData","functionSignature","functionFragment","FunctionFragment","fromString","decoded","decodeFunctionData","processDecoded","params","label","sigHash","getSighash","toLocaleLowerCase","decodeMultisend","console","error","decodeSafeTransaction","param","value","multisendData","index","operation","parseInt","to","BigNumber","from","toHexString","dataLength","signatures","push","Accordion","withStyles","root","border","boxShadow","borderBottom","display","MuiAccordion","AccordionSummary","backgroundColor","marginBottom","minHeight","MuiAccordionSummary","AccordionDetails","theme","flexDirection","MuiAccordionDetails","useStyles","makeStyles","formControl","margin","spacing","minWidth","selectEmpty","marginTop","values","padding","wordBreak","DecodedParam","hideValue","classes","useState","decodedData","setDecodedData","selectedSignature","setSelectedSignature","loadDecodedData","useCallback","selectSignature","event","target","useEffect","className","toString","FormControl","InputLabel","Select","onChange","MenuItem","DecodedData","content","input","width","App","txData","setTxData","dataInfo","setDataInfo","loadDataInfo","prefersDarkMode","useMediaQuery","React","useMemo","createMuiTheme","palette","type","primary","blue","ThemeProvider","CssBaseline","Link","href","color","TextField","placeholder","e","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54981945.chunk.js","sourcesContent":["import axios from 'axios';\nimport { FunctionFragment, Interface, Result } from '@ethersproject/abi';\nimport { BigNumber } from \"@ethersproject/bignumber\";\n\nexport const DEFERRED_DECODING = 'deferred'\n\nexport interface DecodedValue {\n    label?: string,\n    value: any,\n    signatures?: ReadonlyArray<string>,\n    decoded?: Decoded\n}\n\nexport interface Decoded {\n    label: string,\n    params: DecodedValue[]\n}\n\n\nconst signatureLookupUrl = \"https://www.4byte.directory/api/v1/signatures/?ordering=created_at&hex_signature=\"\nconst defaultInterface = new Interface([])\n\nexport const loadSignatures = async (data: string): Promise<string[] | undefined> => {\n    if (!data || data.length == 0) return undefined\n    const signature = data.slice(0, 10)\n    const lookup = await axios.get(signatureLookupUrl + signature)\n    if (lookup.data.results.length == 0) return undefined\n    return lookup.data.results.map((sig: any) => sig.text_signature)\n}\n\nexport const decodeData = async (functionSignature: string, data: string): Promise<Decoded | undefined> => {\n    const functionFragment = FunctionFragment.fromString(functionSignature)\n    const decoded = defaultInterface.decodeFunctionData(functionFragment, data)\n    const params = await processDecoded(functionFragment, decoded)\n    return {\n        label: functionSignature,\n        params\n    }\n}\n\nconst processDecoded = async (functionFragment: FunctionFragment, decoded: Result): Promise<DecodedValue[]> => {\n    const sigHash = Interface.getSighash(functionFragment).toLocaleLowerCase()\n    if (sigHash === \"0x8d80ff0a\" && decoded.length == 1) {\n        try { return [await decodeMultisend(decoded[0])] } catch (e) { console.error(e) }\n    }\n    if (sigHash === \"0x6a761202\" && decoded.length == 10) {\n        try { return [await decodeSafeTransaction(decoded)] } catch (e) { console.error(e) }\n    }\n    return decoded.map((param) => { return { value: param } })\n}\n\nconst decodeMultisend = async (multisendData: string): Promise<DecodedValue> => {\n    let index = 2;\n    const params: DecodedValue[] = []\n    while (index < multisendData.length) {\n        const operation = parseInt(multisendData.slice(index, index += 2), 16)\n        const to = \"0x\" + multisendData.slice(index, index += 40)\n        const value = BigNumber.from(\"0x\" + multisendData.slice(index, index += 64)).toHexString()\n        const dataLength = parseInt(multisendData.slice(index, index += 64), 16) * 2\n        const data = \"0x\" + multisendData.slice(index, index += dataLength)\n        const signatures = await loadSignatures(data)\n        params.push({\n            value: undefined,\n            decoded: {\n                label: \"Transaction \" + (params.length + 1),\n                params: [\n                    { label: \"Operation\", value: operation },\n                    { label: \"To\", value: to },\n                    { label: \"Value\", value: value },\n                    { label: \"Data\", value: data, signatures }\n                ]\n            }\n        })\n    }\n    return {\n        value: multisendData,\n        decoded: {\n            label: \"Multisend transactions\",\n            params\n        }\n    }\n}\n\nconst decodeSafeTransaction = async (decoded: Result): Promise<DecodedValue> => {\n    return {\n        value: undefined,\n        decoded: {\n            label: \"Safe transaction\",\n            params: [\n                { label: \"To\", value: decoded[0] },\n                { label: \"Value\", value: decoded[1] },\n                { label: \"Data\", value: decoded[2], signatures: await loadSignatures(decoded[2]) },\n                { label: \"Operation\", value: decoded[3] },\n                { label: \"SafeTxGas\", value: decoded[4] },\n                { label: \"BaseGas\", value: decoded[5] },\n                { label: \"GasPrice\", value: decoded[6] },\n                { label: \"GasToken\", value: decoded[7] },\n                { label: \"RefundReceiver\", value: decoded[8] },\n                { label: \"Signatures\", value: decoded[9] },\n            ]\n        }\n    }\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport MuiAccordion from '@material-ui/core/Accordion';\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Decoded, DecodedValue, decodeData } from './utils/decoding';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst Accordion = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n    },\n})(MuiAccordion);\n\nconst AccordionSummary = withStyles({\n    root: {\n        backgroundColor: 'rgba(0, 0, 0, .03)',\n        borderBottom: '1px solid rgba(0, 0, 0, .125)',\n        marginBottom: -1,\n        minHeight: 56,\n        '&$expanded': {\n            minHeight: 56,\n        },\n    },\n})(MuiAccordionSummary);\n\nconst AccordionDetails = withStyles((theme) => ({\n    root: {\n        flexDirection: \"column\"\n    },\n}))(MuiAccordionDetails);\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    values: {\n        padding: \"4px 16px 4px 16px\",\n        display: \"block\",\n        wordBreak: \"break-all\",\n    }\n}));\n\ninterface Props {\n    decoded: Decoded,\n}\n\nexport const DecodedParam: React.FC<{ param: DecodedValue, hideValue?: boolean }> = ({ param, hideValue }) => {\n    const classes = useStyles()\n    const [decodedData, setDecodedData] = useState(param.decoded)\n    const [selectedSignature, setSelectedSignature] = useState(param.signatures && param.signatures[0])\n    const loadDecodedData = useCallback(async (selectedSignature: string) => {\n        try {\n            setDecodedData(await decodeData(selectedSignature, param.value))\n        } catch (e) {\n            setDecodedData(undefined)\n            console.error(e)\n        }\n    }, [param.value, setDecodedData])\n    const selectSignature = useCallback(async (event: React.ChangeEvent<{ value: unknown }>) => {\n        const selectedSignature = event.target.value as string\n        setSelectedSignature(selectedSignature)\n        await loadDecodedData(selectedSignature)\n    }, [setSelectedSignature, loadDecodedData])\n    useEffect(() => {\n        // Intial load\n        if (decodedData || !selectedSignature) return\n        loadDecodedData(selectedSignature)\n    }, [decodedData, selectedSignature, loadDecodedData])\n    return (<>\n        {param.label !== undefined && (\n            <b>{param.label}</b>\n        )}\n        {param.value !== undefined && !hideValue && (\n            <span className={classes.values}>\n                {param.value.toString()}\n            </span>\n        )}\n        {param.signatures && param.signatures.length > 1 && (\n            <FormControl className={classes.formControl}>\n                <InputLabel>Signature</InputLabel>\n                <Select value={selectedSignature} onChange={selectSignature}>\n                    {param.signatures.map((sig) => (<MenuItem value={sig}>{sig}</MenuItem>))}\n                </Select>\n            </FormControl>\n        )}\n        { decodedData && <DecodedData decoded={decodedData} />}\n    </>)\n}\n\nconst DecodedData: React.FC<Props> = ({ decoded }) => {\n    return (<Accordion >\n        <AccordionSummary>{decoded.label}</AccordionSummary>\n        <AccordionDetails>\n            {decoded.params.map(param => (<DecodedParam param={param} />)\n            )}\n        </AccordionDetails>\n    </Accordion >);\n}\n\nexport default DecodedData;\n","import React, { useCallback, useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { DecodedParam } from './DecodedData';\nimport { DecodedValue, loadSignatures } from './utils/decoding';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    padding: \"4px\"\n  },\n  input: {\n    width: \"100%\"\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [txData, setTxData] = useState(\"\")\n  const [dataInfo, setDataInfo] = useState<DecodedValue | undefined>(undefined)\n  const loadDataInfo = useCallback(async (data: string) => {\n    setTxData(data)\n    try {\n      const signatures = await loadSignatures(data)\n      setDataInfo({\n        value: data,\n        signatures\n      })\n    } catch (e) {\n      setDataInfo(undefined)\n      console.error(e)\n    }\n  }, [])\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = React.useMemo(() => createMuiTheme({\n    palette: {\n      type: prefersDarkMode ? 'dark' : 'light',\n      primary: blue,\n    },\n  }), [prefersDarkMode])\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.content}>\n        <h1>\n          Transaction decoder via <Link href=\"https://www.4byte.directory\" color=\"inherit\" target=\"_blank\">4byte.directory</Link>\n        </h1>\n        <TextField placeholder=\"Enter transaction data (e.g. 0x6a7612020000...)\" color=\"primary\" className={classes.input} value={txData} onChange={(e) => { loadDataInfo(e.target.value) }} />\n        <br />\n        <br />\n        { dataInfo && <DecodedParam param={dataInfo} hideValue={true} /> }\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}