{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["Accordion","withStyles","root","border","boxShadow","borderBottom","display","expanded","MuiAccordion","AccordionSummary","backgroundColor","marginBottom","minHeight","content","MuiAccordionSummary","AccordionDetails","theme","flexDirection","MuiAccordionDetails","useStyles","makeStyles","padding","input","width","values","wordBreak","defaultInterface","Interface","decodeData","data","a","length","undefined","signature","slice","axios","get","lookup","results","functionSignature","text_signature","functionFragment","FunctionFragment","fromString","decoded","decodeFunctionData","processDecoded","params","label","getSighash","toLocaleLowerCase","decodeMultisend","map","param","value","multisendData","index","operation","parseInt","to","BigNumber","from","toHexString","dataLength","push","renderParams","classes","className","toString","App","useState","txData","setTxData","setDecoded","decodeTxData","useCallback","console","log","error","prefersDarkMode","useMediaQuery","React","useMemo","createMuiTheme","palette","type","primary","blue","ThemeProvider","CssBaseline","TextField","color","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74b96867.chunk.js","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport MuiAccordion from '@material-ui/core/Accordion';\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport { makeStyles, withStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport axios from 'axios';\nimport { FunctionFragment, Interface, Result } from '@ethersproject/abi';\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst Accordion = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n  },\n  expanded: {},\n})(MuiAccordion);\n\nconst AccordionSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56,\n    },\n  },\n  content: {},\n  expanded: {},\n})(MuiAccordionSummary);\n\nconst AccordionDetails = withStyles((theme) => ({\n  root: {\n    flexDirection: \"column\"\n  },\n}))(MuiAccordionDetails);\n\nconst useStyles = makeStyles(() => ({\n  content: {\n    padding: \"4px\"\n  },\n  input: {\n    width: \"100%\"\n  },\n  values: {\n    padding: \"4px 16px 4px 16px\",\n    display: \"block\",\n    wordBreak: \"break-all\",\n  }\n}));\n\ninterface DecodedValue {\n  label?: string,\n  value: any,\n  decoded?: Decoded\n}\n\ninterface Decoded {\n  label: string,\n  params: DecodedValue[]\n}\n\nconst signatureLookupUrl = \"https://www.4byte.directory/api/v1/signatures/?hex_signature=\"\nconst defaultInterface = new Interface([])\n\nconst decodeData = async (data: string): Promise<Decoded | undefined> => {\n  if (!data || data.length == 0) return undefined\n  const signature = data.slice(0, 10)\n  const lookup = await axios.get(signatureLookupUrl + signature)\n  if (lookup.data.results.length == 0) return undefined\n  const functionSignature = lookup.data.results[0].text_signature\n  const functionFragment = FunctionFragment.fromString(functionSignature)\n  const decoded = defaultInterface.decodeFunctionData(functionFragment, data)\n  const params = await processDecoded(functionFragment, decoded)\n  return {\n    label: functionSignature,\n    params\n  }\n}\n\nconst processDecoded = async (functionFragment: FunctionFragment, decoded: Result): Promise<DecodedValue[]> => {\n  if (Interface.getSighash(functionFragment).toLocaleLowerCase() === \"0x8d80ff0a\" && decoded.length == 1) {\n    return [await decodeMultisend(decoded[0])]\n  }\n  return decoded.map((param) => { return { value: param } })\n}\n\nconst decodeMultisend = async (multisendData: string): Promise<DecodedValue> => {\n  let index = 2;\n  const params: DecodedValue[] = []\n  while (index < multisendData.length) {\n    const operation = parseInt(multisendData.slice(index, index += 2), 16)\n    const to = \"0x\" + multisendData.slice(index, index += 40)\n    const value = BigNumber.from(\"0x\" + multisendData.slice(index, index += 64)).toHexString()\n    const dataLength = parseInt(multisendData.slice(index, index += 64), 16) * 2\n    const data = \"0x\" + multisendData.slice(index, index += dataLength)\n    params.push({\n      value: undefined,\n      decoded: {\n        label: \"Transaction \" + (params.length + 1),\n        params: [\n          { label: \"Operation\", value: operation },\n          { label: \"To\", value: to },\n          { label: \"Value\", value: value },\n          { label: \"Data\", value: data, decoded: await decodeData(data) }\n        ]\n      }\n    })\n  }\n  return {\n    value: multisendData,\n    decoded: {\n      label: \"Multisend transactions\",\n      params\n    }\n  }\n}\n\nconst renderParams = (classes: any, decoded: Decoded | undefined): any => {\n  if (!decoded) return (<></>)\n  return (<Accordion >\n    <AccordionSummary>{decoded.label}</AccordionSummary>\n    <AccordionDetails>\n      {decoded.params.map(param => (<>\n        {param.label !== undefined && (\n          <b>{param.label}</b>\n        )}\n        {param.value !== undefined && (\n          <span className={classes.values}>\n            {param.value.toString()}\n          </span>\n        )}\n        {renderParams(classes, param.decoded)}\n      </>)\n      )}\n    </AccordionDetails>\n  </Accordion >)\n}\n\nfunction App() {\n  const classes = useStyles();\n  const [txData, setTxData] = useState(\"\")\n  const [decoded, setDecoded] = useState<Decoded | undefined>(undefined)\n  const decodeTxData = useCallback(async (data: string) => {\n    setTxData(data)\n    console.log({ data })\n    try {\n      setDecoded(await decodeData(data))\n    } catch (e) {\n      setDecoded(undefined)\n      console.error(e)\n    }\n  }, [])\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = React.useMemo(() => createMuiTheme({\n    palette: {\n      type: prefersDarkMode ? 'dark' : 'light',\n      primary: blue,\n    },\n  }), [prefersDarkMode])\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.content}>\n        <h1>\n          Transaction decoder\n        </h1>\n        <TextField color=\"primary\" className={classes.input} value={txData} onChange={(e) => { decodeTxData(e.target.value) }} />\n        <br />\n        <br />\n        {renderParams(classes, decoded)}\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}