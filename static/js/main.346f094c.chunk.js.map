{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["Accordion","withStyles","root","border","boxShadow","borderBottom","display","expanded","MuiAccordion","AccordionSummary","backgroundColor","marginBottom","minHeight","content","MuiAccordionSummary","AccordionDetails","theme","flexDirection","MuiAccordionDetails","useStyles","makeStyles","padding","input","width","values","wordBreak","defaultInterface","Interface","decodeData","data","a","length","undefined","signature","slice","axios","get","lookup","results","functionSignature","text_signature","functionFragment","FunctionFragment","fromString","decoded","decodeFunctionData","processDecoded","params","label","sigHash","getSighash","toLocaleLowerCase","decodeMultisend","console","error","decodeSafeTransaction","map","param","value","multisendData","index","operation","parseInt","to","BigNumber","from","toHexString","dataLength","push","renderParams","classes","className","toString","App","useState","txData","setTxData","setDecoded","decodeTxData","useCallback","log","prefersDarkMode","useMediaQuery","React","useMemo","createMuiTheme","palette","type","primary","blue","ThemeProvider","CssBaseline","TextField","color","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.346f094c.chunk.js","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport MuiAccordion from '@material-ui/core/Accordion';\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport { makeStyles, withStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport axios from 'axios';\nimport { FunctionFragment, Interface, Result } from '@ethersproject/abi';\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst Accordion = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n  },\n  expanded: {},\n})(MuiAccordion);\n\nconst AccordionSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56,\n    },\n  },\n  content: {},\n  expanded: {},\n})(MuiAccordionSummary);\n\nconst AccordionDetails = withStyles((theme) => ({\n  root: {\n    flexDirection: \"column\"\n  },\n}))(MuiAccordionDetails);\n\nconst useStyles = makeStyles(() => ({\n  content: {\n    padding: \"4px\"\n  },\n  input: {\n    width: \"100%\"\n  },\n  values: {\n    padding: \"4px 16px 4px 16px\",\n    display: \"block\",\n    wordBreak: \"break-all\",\n  }\n}));\n\ninterface DecodedValue {\n  label?: string,\n  value: any,\n  decoded?: Decoded\n}\n\ninterface Decoded {\n  label: string,\n  params: DecodedValue[]\n}\n\nconst signatureLookupUrl = \"https://www.4byte.directory/api/v1/signatures/?hex_signature=\"\nconst defaultInterface = new Interface([])\n\nconst decodeData = async (data: string): Promise<Decoded | undefined> => {\n  if (!data || data.length == 0) return undefined\n  const signature = data.slice(0, 10)\n  const lookup = await axios.get(signatureLookupUrl + signature)\n  if (lookup.data.results.length == 0) return undefined\n  const functionSignature = lookup.data.results[0].text_signature\n  const functionFragment = FunctionFragment.fromString(functionSignature)\n  const decoded = defaultInterface.decodeFunctionData(functionFragment, data)\n  const params = await processDecoded(functionFragment, decoded)\n  return {\n    label: functionSignature,\n    params\n  }\n}\n\nconst processDecoded = async (functionFragment: FunctionFragment, decoded: Result): Promise<DecodedValue[]> => {\n  const sigHash = Interface.getSighash(functionFragment).toLocaleLowerCase()\n  if (sigHash === \"0x8d80ff0a\" && decoded.length == 1) {\n    try { return [await decodeMultisend(decoded[0])] } catch (e) { console.error(e) }\n  }\n  if (sigHash === \"0x6a761202\" && decoded.length == 10) {\n    try { return [await decodeSafeTransaction(decoded)] } catch (e) { console.error(e) }\n  }\n  return decoded.map((param) => { return { value: param } })\n}\n\nconst decodeMultisend = async (multisendData: string): Promise<DecodedValue> => {\n  let index = 2;\n  const params: DecodedValue[] = []\n  while (index < multisendData.length) {\n    const operation = parseInt(multisendData.slice(index, index += 2), 16)\n    const to = \"0x\" + multisendData.slice(index, index += 40)\n    const value = BigNumber.from(\"0x\" + multisendData.slice(index, index += 64)).toHexString()\n    const dataLength = parseInt(multisendData.slice(index, index += 64), 16) * 2\n    const data = \"0x\" + multisendData.slice(index, index += dataLength)\n    params.push({\n      value: undefined,\n      decoded: {\n        label: \"Transaction \" + (params.length + 1),\n        params: [\n          { label: \"Operation\", value: operation },\n          { label: \"To\", value: to },\n          { label: \"Value\", value: value },\n          { label: \"Data\", value: data, decoded: await decodeData(data) }\n        ]\n      }\n    })\n  }\n  return {\n    value: multisendData,\n    decoded: {\n      label: \"Multisend transactions\",\n      params\n    }\n  }\n}\n\nconst decodeSafeTransaction = async (decoded: Result): Promise<DecodedValue> => {\n  return {\n    value: undefined,\n    decoded: {\n      label: \"Safe transaction\",\n      params: [\n        { label: \"To\", value: decoded[0] },\n        { label: \"Value\", value: decoded[1] },\n        { label: \"Data\", value: decoded[2], decoded: await decodeData(decoded[2]) },\n        { label: \"Operation\", value: decoded[3] },\n        { label: \"SafeTxGas\", value: decoded[4] },\n        { label: \"BaseGas\", value: decoded[5] },\n        { label: \"GasPrice\", value: decoded[6] },\n        { label: \"GasToken\", value: decoded[7] },\n        { label: \"RefundReceiver\", value: decoded[8] },\n        { label: \"Signatures\", value: decoded[9] },\n      ]\n    }\n  }\n}\n\nconst renderParams = (classes: any, decoded: Decoded | undefined): any => {\n  if (!decoded) return (<></>)\n  return (<Accordion >\n    <AccordionSummary>{decoded.label}</AccordionSummary>\n    <AccordionDetails>\n      {decoded.params.map(param => (<>\n        {param.label !== undefined && (\n          <b>{param.label}</b>\n        )}\n        {param.value !== undefined && (\n          <span className={classes.values}>\n            {param.value.toString()}\n          </span>\n        )}\n        {renderParams(classes, param.decoded)}\n      </>)\n      )}\n    </AccordionDetails>\n  </Accordion >)\n}\n\nfunction App() {\n  const classes = useStyles();\n  const [txData, setTxData] = useState(\"\")\n  const [decoded, setDecoded] = useState<Decoded | undefined>(undefined)\n  const decodeTxData = useCallback(async (data: string) => {\n    setTxData(data)\n    console.log({ data })\n    try {\n      setDecoded(await decodeData(data))\n    } catch (e) {\n      setDecoded(undefined)\n      console.error(e)\n    }\n  }, [])\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = React.useMemo(() => createMuiTheme({\n    palette: {\n      type: prefersDarkMode ? 'dark' : 'light',\n      primary: blue,\n    },\n  }), [prefersDarkMode])\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.content}>\n        <h1>\n          Transaction decoder\n        </h1>\n        <TextField color=\"primary\" className={classes.input} value={txData} onChange={(e) => { decodeTxData(e.target.value) }} />\n        <br />\n        <br />\n        {renderParams(classes, decoded)}\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}